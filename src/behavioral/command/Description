Команда —
это поведенческий паттерн проектирования,
который превращает запросы в объекты, позволяя передавать их как аргументы при вызове методов,
ставить запросы в очередь, логировать их, а также поддерживать отмену операций.

В классической реализации шаблон команды требует реализации четырех компонентов: Command, Receiver, Invoker и Client

1. Команда — это объект, роль которого заключается в хранении всей информации, необходимой для выполнения действия,
включая вызываемый метод, аргументы метода и объект (известный как получатель), который реализует метод.
(интерфейс с методом операции, классы с переопределенным методом для каждой операции) например: TextFileOperation
2. Получатель(receiver) — это объект, который выполняет набор связанных действий . Это компонент, который выполняет
фактическое действие, когда вызывается метод команды выполнения действия. например: сохранить, написать
3. Вызывающий объект(invoker) — это объект, который знает, как выполнить данную команду, но не знает, как эта команда
была реализована. Он знает только интерфейс команды.
Класс TextFileOperationExecutor — это всего лишь тонкий слой абстракции, который отделяет объекты команд от их
потребителей  и вызывает метод, инкапсулированный в объектах команд TextFileOperation .
4. Клиент(client) — это объект, который управляет процессом  выполнения команд, указывая, какие команды выполнять и на
каких этапах процесса их выполнять.